
#if defined VERTEX_SHADER

#  define VERTEX_OUT out

#elif defined FRAGMENT_SHADER

#  define VERTEX_OUT in

#else

#  error define VERTEX_SHADER or FRAGMENT_SHADER befor makeing a shader object

#endif

///////////////////////////////////////////////////////////////////////////////
//  OPTIONS                                                                  // 
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//  INTERFACE                                                                // 
///////////////////////////////////////////////////////////////////////////////

uniform mat4   World_To_Shadow_Map;
uniform mat4x3 Object_To_World;

#if defined VERTEX_SHADER

	in vec3 vertex_position;

#endif

#if defined FRAGMENT_SHADER
	// out vec4 fragment_color;
#endif

///////////////////////////////////////////////////////////////////////////////
//  VERTEX_SHADER                                                            // 
///////////////////////////////////////////////////////////////////////////////

#if defined VERTEX_SHADER

///////////////////////////////////////////////////////////////////////////////
//  VERTEX_SHADER                                                            // 
///////////////////////////////////////////////////////////////////////////////

void main()
{
	vec3 world_position = Object_To_World * vec4(vertex_position, 1);
	gl_Position = World_To_Shadow_Map * vec4(world_position, 1);
}

#else

///////////////////////////////////////////////////////////////////////////////
//  FRAGMENT_SHADER                                                          // 
///////////////////////////////////////////////////////////////////////////////

void main()
{
}

#endif
